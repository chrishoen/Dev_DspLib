/*==============================================================================
Description:
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include <stdlib.h>
#include <stdio.h>
#include "my_functions.h"

#include <math.h>
#include <string.h>

#include "dspStatistics.h"

namespace Dsp
{
   //******************************************************************************
   //******************************************************************************
   //******************************************************************************
   //******************************************************************************
   //******************************************************************************
   //******************************************************************************

   SumStatistics::SumStatistics()
   {
      reset();
   }

   void SumStatistics::reset()
   {
      // Output values
      mX = 0.0;
      mEX = 0.0;
      mUX = 0.0;
      mMean = 0.0;
      mStdDev = 0.0;
      mEXSquare = 0.0;
      mVariance = 0.0;
      mXSum = 0.0;
      mXSquareSum = 0.0;
      mCount = 0;
   }
   
   //******************************************************************************
   //******************************************************************************
   //******************************************************************************

   void SumStatistics::add(double aX)
   {
      //--------------------------------------------------------------------------- 
      // Update sums

      mXSum       += aX;
      mXSquareSum += aX*aX;
      mCount++;
   }

   //******************************************************************************
   //******************************************************************************
   //******************************************************************************

   void SumStatistics::subtract(double aX)
   {
      // Guard
      if (mCount==0)return;

      //--------------------------------------------------------------------------- 
      // Update sums

      mXSum       -= aX;
      mXSquareSum -= aX*aX;
      mCount--;
   }

   //******************************************************************************
   //******************************************************************************
   //******************************************************************************
   // Calculate results for mean and standard deviation

   void SumStatistics::calculate()
   {
      // Guard
      if (mCount==0)return;

      // Expectation (mean) of X
      mEX = mXSum / mCount;
      // Expectation of X squared
      mEXSquare = mXSquareSum / mCount;

      // Variance of X
      mVariance = mEXSquare - mEX*mEX;

      // Uncertainty (stddev) of X
      if (mVariance > 0.0f)
      {
         mUX = sqrt(mVariance);
      }
      else
      {
         mUX = 0.0;
      }

      // Store nicknames
      mMean   = mEX;
      mStdDev = mUX;
   }

   //******************************************************************************

   void SumStatistics::show()
   {
      printf("%3d $$ %8.6f %8.6f %8.6f  %8.6f\n",
         mCount,
         mEX,
         mUX);
   }
}//namespace

