/*==============================================================================
Description:
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "stdafx.h"

#include "dspFilterStatistics.h"

namespace Dsp
{
namespace Filter
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************

AlphaStatistics::AlphaStatistics()
{
   // Output values
   mX = 0.0;
   mEX = 0.0;
   mUX = 0.0;
   mVariance = 0.0;
   mMean   = 0.0;
   mStdDev = 0.0;
   mK = 0;
}

void AlphaStatistics::initialize(double aAlpha)
{
   mXAlpha.initialize(aAlpha);
   mXSquareAlpha.initialize(aAlpha);
   mX = 0.0;
   mEX = 0.0;
   mUX = 0.0;
   mVariance = 0.0;
   mMean   = 0.0;
   mStdDev = 0.0;
   mK = 0;
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void AlphaStatistics::put(double aX)
{
   // These result in moving averages of X and X squared
   mXAlpha.put(aX);
   mXSquareAlpha.put(aX*aX);

   // X
   mX = aX;

   // Expectation (mean) of X
   mEX = mXAlpha.mXX;

   // Variance of X
   mVariance = mXSquareAlpha.mXX - mEX*mEX;

   // Uncertainty (stddev) of X
   if (mVariance > 0.0f)
   {
      mUX = sqrt(mVariance);
   }
   else
   {
      mUX = 0.0f;
   }

   // Nicknames
   mMean   = mEX;
   mStdDev = mUX;

   // Update
   mK++;
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void AlphaStatistics::show()
{
   printf("%3d %8.3f %8.3f %8.3f\n",
      mK,
      mX,
      mEX,
      mUX);
}


//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace
}//namespace

