/*==============================================================================
Description:
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "prnPrint.h"
#include "dsp_math.h"

#include "TestFunctionObject.h"
//******************************************************************************
//******************************************************************************
//******************************************************************************
// Constructor.

TestFunctionObject::TestFunctionObject()
{
   reset();
}

TestFunctionObject::TestFunctionObject(Special_Parms& aP)
{
   mP = aP;
   reset();
}

void TestFunctionObject::initialize(Special_Parms& aP)
{
   mP = aP;
   reset();
}

void TestFunctionObject::reset()
{
   mC0= 0.0;
   mC1= 0.0;
   mC2= 0.0;
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void TestFunctionObject::evaluateFunction(
	Eigen::VectorXd& aX,          // Input
	Eigen::VectorXd& aY)          // Output
{
   aY(0) = mC0 + mC1*aX(0) + mC2*aX(0)*aX(0);

}  

// This evaluates the jacobian of the function at the input value array.
void TestFunctionObject::evaluateJacobian(
	Eigen::VectorXd& aX,                 // Input
	Eigen::MatrixXd& aJacobian)          // Output
{
   aJacobian(0)= mC1 + 2.0*mC2*aX(0);
}    

//******************************************************************************
//******************************************************************************
//******************************************************************************

