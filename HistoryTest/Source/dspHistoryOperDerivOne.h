#pragma once

/*==============================================================================
Signal history linear operator: first time derivative.
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "risCmdLineExec.h"

#include "dspHistoryOperParms.h"
#include "dspHistoryOperBase.h"

//******************************************************************************
//******************************************************************************
//******************************************************************************

namespace Dsp
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
// This class provides a linear operator on the set of signal histories the 
// first time derivative. It's a differentiator.
 
class HistoryOperDerivOne : public HistoryOperBase
{
public:
   typedef HistoryOperBase BaseClass;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Constructor.
   HistoryOperDerivOne(HistoryOperParms& aParms);
   void show();

   // Apply the linear operator from the input to the output. F:X->Y
   void operate(History& aX,History& aY) override;
};

//******************************************************************************
}//namespace


