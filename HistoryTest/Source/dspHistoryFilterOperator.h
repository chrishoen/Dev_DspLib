#pragma once

/*==============================================================================
Signal history general operator.
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "dspHistoryFilterParms.h"
#include "dspHistory.h"

//******************************************************************************
//******************************************************************************
//******************************************************************************

namespace Dsp
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
// This class provides an operator for a signal history that evolves according
// to parameters specified in the parms file. Based on the operator type
// parameter, it instantiates one of the concrete operators and uses it to
// operate on a history to produce a new history.
 
class HistoryFilterOperator
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   HistoryFilterParms mParms;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Constructor.
   HistoryFilterOperator(HistoryFilterParms& aParms);
   void show();

   // Apply the linear operator from the input to the output. F:X->Y
   void operate(History& aX,History& aY);
   void operate(History& aX,History& aY1,History& aY2);
};

//******************************************************************************
}//namespace

