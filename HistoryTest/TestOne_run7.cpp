/*==============================================================================
Description:
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************
#include "stdafx.h"

#include "dspHistory.h"
#include "dspHistoryStatistics.h"
#include "dspHistoryTextFile.h"
#include "dspHistoryGenerator.h"
#include "dspHistoryAlphaFilter.h"

#include "Parms.h"
#include "TestOne.h"

using namespace Dsp;

//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************
//******************************************************************************

void TestOne::doRun7()
{
   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Generate a signal history.

   // Signal history.
   History tX;

   // Signal history generator.
   HistoryGenerator tGen(gParms.mHistoryGenParms);

   // Generate the history.
   tGen.generateHistory(tX);

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Collect statistics on the history.

   // Statistics
   HistoryStatistics  tStatisticsX;
   tStatisticsX.collectValue(tX);
   tStatisticsX.show(0,"X   ");

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Write the signal history to an output file.

   // Output file.
   HistoryCsvFileWriter  tSampleWriterX;
   tSampleWriterX.open(gParms.mOutputFile);
   tSampleWriterX.writeHistory(tX);
   tSampleWriterX.close();

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Filter the signal history.

   // Signal history.
   History tY;

   // Signal history generator.
   HistoryAlphaFilter tFilter(gParms.mLambda1);

   // Filter the history.
   tFilter.operate(tX,tY);

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Collect statistics on the history.

   // Statistics
   HistoryStatistics  tStatisticsY;
   tStatisticsY.collectValue(tY);
   tStatisticsY.show(0,"Y   ");

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Write the signal history to an output file.

   // Output file.
   HistoryCsvFileWriter  tSampleWriterY;
   tSampleWriterY.open(gParms.mOutputFile2);
   tSampleWriterY.writeHistory(tY);
   tSampleWriterY.close();

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Done.

   Prn::print(0, "TestOne::doRun7 %d",tY.mMaxSamples);
}

