#pragma once

/*==============================================================================
History writer. 
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "dspTextFile.h"

//******************************************************************************
//******************************************************************************
//******************************************************************************
// This class is used for debug. It contains a set of input variables
// and writes them to a sample history csv file.

class PulseWriter
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   // Input variables. 
   bool mPulseFlag;
   bool mPulseRise;
   bool mPulseFall;

   bool mDetectFlag;
   bool mDetectRise;
   bool mDetectFall;

   int mCount;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   // Writer.
   Dsp::LogFileWriter mFileWriter;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Infrastucture.

   // Constructor,
   PulseWriter();
   bool initialize();
   void finalize();

   // Reset the input variables.
   void resetVars();

   // Write the input variables to the csv history file.
   void doWrite();
   void doWrite1();
   void doWrite2();
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Global instance.

#ifdef _PULSEWRITER_CPP_
   PulseWriter gPulseWriter;
#else
   extern PulseWriter gPulseWriter;
#endif

//******************************************************************************
//******************************************************************************
//******************************************************************************
