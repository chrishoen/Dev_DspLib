#pragma once

/*==============================================================================
Pulse processor.
==========================================================================*/

#include "dspBoundCount.h"
#include "dspSlidingSum.h"
#include "dspFuzzyAlpha.h"

//******************************************************************************
//******************************************************************************
//******************************************************************************


//******************************************************************************
//******************************************************************************
//******************************************************************************
//

class PulseProc
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   // Pulse variables.
   bool mPulseFlag;
   bool mPulseRise;
   bool mPulseFall;
   bool mLastPulseFlag;

   // Detection variables.
   bool mDetectFlag;
   bool mDetectRise;
   bool mDetectFall;
   bool mLastDetectFlag;

   // Count variables.
   int mCount;

   // Analog variables.
   float mY;
   
   // Components.
   Dsp::BoundCount mBoundCount;
   Dsp::SlidingSum<int,char,20> mSlidingSum;
   Dsp::FuzzyAlpha mFuzzyAlpha;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Constructor.
   PulseProc();
   void resetVars();
   void initialize();
   void finalize();

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Process a pulse.
   void processPulse(bool aPulseFlag);
   // Process a pulse.
   void processPulse1(bool aPulseFlag);
   void processPulse2(bool aPulseFlag);
   void processPulse3(bool aPulseFlag);
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Global singular instance.

#ifdef _PULSEPROC_CPP_
         PulseProc gPulseProc;
#else
extern   PulseProc gPulseProc;
#endif

//******************************************************************************
//******************************************************************************
//******************************************************************************

